#!/usr/bin/env python3.10

import sys
import struct

assert len(sys.argv) == 3

with open(sys.argv[1]) as file:
  lines=""
  for line in file:
    if "omp.map_info" in line:
      line=line.replace("name =", "var_name =")
      line=line.replace("map_capture_type = #omp<variable_capture_kind(ByRef)>, ", "")
      line=line.replace("map_capture_type = #omp<variable_capture_kind(ByCopy)>, ", "")
    if "#dlti.dl_spec<" in line:
      line=line.replace(", omp.is_gpu = false, omp.is_target_device = false, omp.requires = #omp<clause_requires none>, omp.version = #omp.version<version = 11>", "")
    if "arith.constant" in line and "() -> f64" in line and "value = 0x" in line:
      # This is the hex value that we need to convert
      hex_val=line.split("value =")[1].split(":")[0].strip()
      rhex_val=hex_val.replace("0x", "")
      float_val=None
      try:
        # Try to convert to a double
        float_val=struct.unpack('!d', bytes.fromhex(rhex_val))[0]
      except:
        # Try to convert to a single float
        float_val=struct.unpack('!f', bytes.fromhex(rhex_val))[0]

      if float_val is not None:
        to_add_line=line.split("value =")[0]+"value ="+str(float_val)+" : "+line.split("value =")[1].split(":", 1)[1]
      else:
        print("Warning, could not convert hex value '{hex_val}' to float, defaulting to existing value", file=sys.stderr)
        to_add_line=line
    else:
      to_add_line=line
    lines+=to_add_line

with open(sys.argv[2], "w") as file:
  file.write(lines)

